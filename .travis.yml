---
sudo: required

env:
  - distribution: centos
    version: 7

services:
  - docker

jobs:
  include:
    - stage: test
      before_install:
        - 'sudo docker pull ${distribution}:${version}'
        - 'sudo docker build --no-cache --rm --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'
      script:
        - container_id=$(mktemp)
        - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/kerberos_server:ro ${distribution}-${version}:ansible > "${container_id}"'
        - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/kerberos_server/tests/test.yml --syntax-check'
        - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/kerberos_server/tests/test.yml'
        - >
          sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/kerberos_server/tests/test.yml
          | grep -q 'changed=0.*failed=0'
          && (echo 'Idempotence test: pass' && exit 0)
          || (echo 'Idempotence test: fail' && exit 1)
        - 'sudo docker rm -f "$(cat ${container_id})"'
    - stage: deploy
      if: (branch = master) AND (NOT (type IN (push, pull_request)))
      notifications:
        webhooks: https://galaxy.ansible.com/api/v1/notifications/
